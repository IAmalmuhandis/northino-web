{"version":3,"sources":["adminDashboard/components/@extended/Dot.js","adminDashboard/pages/dashboard/OrdersTable.js","adminDashboard/pages/dashboard/IncomeAreaChart.js","adminDashboard/pages/dashboard/MonthlyBarChart.js","adminDashboard/pages/dashboard/ReportAreaChart.js","adminDashboard/pages/dashboard/SalesColumnChart.js","adminDashboard/components/cards/statistics/AnalyticEcommerce.js","adminDashboard/pages/dashboard/index.js"],"names":["Dot","main","color","size","theme","useTheme","palette","secondary","error","warning","info","success","primary","sx","width","height","borderRadius","bgcolor","createData","trackingNo","name","fat","carbs","protein","rows","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","id","align","disablePadding","label","OrderTableHead","TableHead","TableRow","headCell","TableCell","padding","sortDirection","OrderStatus","title","status","Stack","direction","spacing","alignItems","Typography","OrderTable","useState","selected","Box","TableContainer","overflowX","position","display","maxWidth","whiteSpace","Table","pl","pr","TableBody","row","isItemSelected","indexOf","labelId","hover","role","border","tabIndex","component","scope","Link","RouterLink","to","value","displayType","thousandSeparator","prefix","areaChartOptions","chart","type","toolbar","show","dataLabels","enabled","stroke","curve","grid","strokeDashArray","IncomeAreaChart","slot","text","line","divider","options","setOptions","useEffect","prevState","colors","xaxis","categories","labels","style","axisBorder","tickAmount","yaxis","borderColor","tooltip","data","series","setSeries","barChartOptions","plotOptions","bar","columnWidth","axisTicks","MonthlyBarChart","light","format","x","ReportAreaChart","legend","columnChartOptions","fill","opacity","y","formatter","val","fontFamily","offsetX","offsetY","useSeriesColors","markers","radius","offsexX","offsexY","itemMargin","horizontal","vertical","responsive","breakpoint","SalesColumnChart","primaryMain","successDark","dark","horizontalAlign","AnalyticEcommerce","count","percentage","isLoss","extra","MainCard","contentSX","p","variant","Grid","container","item","Chip","icon","RiseOutlined","fontSize","FallOutlined","ml","pt","defaultProps","avatarSX","actionSX","mt","top","right","alignSelf","transform","DashboardDefault","setValue","setSlot","rowSpacing","columnSpacing","xs","mb","sm","md","lg","justifyContent","Button","onClick","content","pb","List","py","ListItemButton","ListItemText","TextField","select","onChange","e","target","option","MenuItem","px","ListItemAvatar","Avatar","TransactionOutlined","ListItemSecondaryAction","noWrap"],"mappings":"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","file":"static/js/7.79a213f7.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Box } from '@mui/material';\r\n\r\nconst Dot = ({ color, size }) => {\r\n    const theme = useTheme();\r\n    let main;\r\n    switch (color) {\r\n        case 'secondary':\r\n            main = theme.palette.secondary.main;\r\n            break;\r\n        case 'error':\r\n            main = theme.palette.error.main;\r\n            break;\r\n        case 'warning':\r\n            main = theme.palette.warning.main;\r\n            break;\r\n        case 'info':\r\n            main = theme.palette.info.main;\r\n            break;\r\n        case 'success':\r\n            main = theme.palette.success.main;\r\n            break;\r\n        case 'primary':\r\n        default:\r\n            main = theme.palette.primary.main;\r\n    }\r\n\r\n    return (\r\n        <Box\r\n            sx={{\r\n                width: size || 8,\r\n                height: size || 8,\r\n                borderRadius: '50%',\r\n                bgcolor: main\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nDot.propTypes = {\r\n    color: PropTypes.string,\r\n    size: PropTypes.number\r\n};\r\n\r\nexport default Dot;\r\n","import PropTypes from \"prop-types\";\r\nimport { useState } from \"react\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\n\r\n// material-ui\r\nimport {\r\n  Box,\r\n  Link,\r\n  Stack,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n} from \"@mui/material\";\r\n\r\n// third-party\r\nimport NumberFormat from \"react-number-format\";\r\n\r\n// project import\r\nimport Dot from \"../../components/@extended/Dot\";\r\n\r\nfunction createData(trackingNo, name, fat, carbs, protein) {\r\n  return { trackingNo, name, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData(84564564, \"Canva Beginners Tutorial\", \"06/07/2022\", 2, 40570),\r\n  createData(98764564, \"HTML For Beginners\", \"06/07/2022\", 0, 180139),\r\n  createData(98756325, \"Mobile App Development Course\", \"06/07/2022\", 1, 90989),\r\n  createData(98652366, \"CSS For Beginners\", \"06/07/2022\", 1, 10239),\r\n  createData(13286564, \"Digital Marketing Course\", \"06/07/2022\", 1, 83348),\r\n  createData(86739658, \"Content Creation\", \"06/07/2022\", 0, 410780),\r\n  createData(13256498, \"Fast Typing Course\", \"06/07/2022\", 2, 70999),\r\n  createData(98753263, \"Business Management\", \"06/07/2022\", 2, 10570),\r\n  createData(98753275, \"Microsoft Office Tutorial\", \"06/07/2022\", 1, 98063),\r\n  createData(98753291, \"CorelDraw\", \"06/07/2022\", 0, 14001),\r\n];\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) {\r\n      return order;\r\n    }\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\n// ==============================|| ORDER TABLE - HEADER CELL ||============================== //\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"trackingNo\",\r\n    align: \"left\",\r\n    disablePadding: false,\r\n    label: \"Tracking No.\",\r\n  },\r\n  {\r\n    id: \"name\",\r\n    align: \"left\",\r\n    disablePadding: true,\r\n    label: \"Course Name\",\r\n  },\r\n  {\r\n    id: \"fat\",\r\n    align: \"right\",\r\n    disablePadding: false,\r\n    label: \"Date\",\r\n  },\r\n  {\r\n    id: \"carbs\",\r\n    align: \"left\",\r\n    disablePadding: false,\r\n\r\n    label: \"Status\",\r\n  },\r\n  {\r\n    id: \"protein\",\r\n    align: \"right\",\r\n    disablePadding: false,\r\n    label: \"Amount\",\r\n  },\r\n];\r\n\r\n// ==============================|| ORDER TABLE - HEADER ||============================== //\r\n\r\nfunction OrderTableHead({ order, orderBy }) {\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.align}\r\n            padding={headCell.disablePadding ? \"none\" : \"normal\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            {headCell.label}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nOrderTableHead.propTypes = {\r\n  order: PropTypes.string,\r\n  orderBy: PropTypes.string,\r\n};\r\n\r\n// ==============================|| ORDER TABLE - STATUS ||============================== //\r\n\r\nconst OrderStatus = ({ status }) => {\r\n  let color;\r\n  let title;\r\n\r\n  switch (status) {\r\n    case 0:\r\n      color = \"warning\";\r\n      title = \"Pending\";\r\n      break;\r\n    case 1:\r\n      color = \"success\";\r\n      title = \"Approved\";\r\n      break;\r\n    case 2:\r\n      color = \"error\";\r\n      title = \"Rejected\";\r\n      break;\r\n    default:\r\n      color = \"primary\";\r\n      title = \"None\";\r\n  }\r\n\r\n  return (\r\n    <Stack direction=\"row\" spacing={1} alignItems=\"center\">\r\n      <Dot color={color} />\r\n      <Typography>{title}</Typography>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nOrderStatus.propTypes = {\r\n  status: PropTypes.number,\r\n};\r\n\r\n// ==============================|| ORDER TABLE ||============================== //\r\n\r\nexport default function OrderTable() {\r\n  const [order] = useState(\"asc\");\r\n  const [orderBy] = useState(\"trackingNo\");\r\n  const [selected] = useState([]);\r\n\r\n  const isSelected = (trackingNo) => selected.indexOf(trackingNo) !== -1;\r\n\r\n  return (\r\n    <Box>\r\n      <TableContainer\r\n        sx={{\r\n          width: \"100%\",\r\n          overflowX: \"auto\",\r\n          position: \"relative\",\r\n          display: \"block\",\r\n          maxWidth: \"100%\",\r\n          \"& td, & th\": { whiteSpace: \"nowrap\" },\r\n        }}\r\n      >\r\n        <Table\r\n          aria-labelledby=\"tableTitle\"\r\n          sx={{\r\n            \"& .MuiTableCell-root:first-child\": {\r\n              pl: 2,\r\n            },\r\n            \"& .MuiTableCell-root:last-child\": {\r\n              pr: 3,\r\n            },\r\n          }}\r\n        >\r\n          <OrderTableHead order={order} orderBy={orderBy} />\r\n          <TableBody>\r\n            {stableSort(rows, getComparator(order, orderBy)).map(\r\n              (row, index) => {\r\n                const isItemSelected = isSelected(row.trackingNo);\r\n                const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    role=\"checkbox\"\r\n                    sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\r\n                    aria-checked={isItemSelected}\r\n                    tabIndex={-1}\r\n                    key={row.trackingNo}\r\n                    selected={isItemSelected}\r\n                  >\r\n                    <TableCell\r\n                      component=\"th\"\r\n                      id={labelId}\r\n                      scope=\"row\"\r\n                      align=\"left\"\r\n                    >\r\n                      <Link color=\"secondary\" component={RouterLink} to=\"\">\r\n                        {row.trackingNo}\r\n                      </Link>\r\n                    </TableCell>\r\n                    <TableCell align=\"left\">{row.name}</TableCell>\r\n                    <TableCell align=\"right\">{row.fat}</TableCell>\r\n                    <TableCell align=\"left\">\r\n                      <OrderStatus status={row.carbs} />\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">\r\n                      <NumberFormat\r\n                        value={row.protein}\r\n                        displayType=\"text\"\r\n                        thousandSeparator\r\n                        prefix=\"N\"\r\n                      />\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              }\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Box>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { useState, useEffect } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\n// third-party\r\nimport ReactApexChart from 'react-apexcharts';\r\n\r\n// chart options\r\nconst areaChartOptions = {\r\n    chart: {\r\n        height: 450,\r\n        type: 'area',\r\n        toolbar: {\r\n            show: false\r\n        }\r\n    },\r\n    dataLabels: {\r\n        enabled: false\r\n    },\r\n    stroke: {\r\n        curve: 'smooth',\r\n        width: 2\r\n    },\r\n    grid: {\r\n        strokeDashArray: 0\r\n    }\r\n};\r\n\r\n// ==============================|| INCOME AREA CHART ||============================== //\r\n\r\nconst IncomeAreaChart = ({ slot }) => {\r\n    const theme = useTheme();\r\n\r\n    const { primary, secondary } = theme.palette.text;\r\n    const line = theme.palette.divider;\r\n\r\n    const [options, setOptions] = useState(areaChartOptions);\r\n\r\n    useEffect(() => {\r\n        setOptions((prevState) => ({\r\n            ...prevState,\r\n            colors: [theme.palette.primary.main, theme.palette.primary[700]],\r\n            xaxis: {\r\n                categories:\r\n                    slot === 'month'\r\n                        ? ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\r\n                        : ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\r\n                labels: {\r\n                    style: {\r\n                        colors: [\r\n                            secondary,\r\n                            secondary,\r\n                            secondary,\r\n                            secondary,\r\n                            secondary,\r\n                            secondary,\r\n                            secondary,\r\n                            secondary,\r\n                            secondary,\r\n                            secondary,\r\n                            secondary,\r\n                            secondary\r\n                        ]\r\n                    }\r\n                },\r\n                axisBorder: {\r\n                    show: true,\r\n                    color: line\r\n                },\r\n                tickAmount: slot === 'month' ? 11 : 7\r\n            },\r\n            yaxis: {\r\n                labels: {\r\n                    style: {\r\n                        colors: [secondary]\r\n                    }\r\n                }\r\n            },\r\n            grid: {\r\n                borderColor: line\r\n            },\r\n            tooltip: {\r\n                theme: 'light'\r\n            }\r\n        }));\r\n    }, [primary, secondary, line, theme, slot]);\r\n\r\n    const [series, setSeries] = useState([\r\n        {\r\n            name: 'Page Views',\r\n            data: [0, 86, 28, 115, 48, 210, 136]\r\n        },\r\n        {\r\n            name: 'Sessions',\r\n            data: [0, 43, 14, 56, 24, 105, 68]\r\n        }\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        setSeries([\r\n            {\r\n                name: 'Page Views',\r\n                data: slot === 'month' ? [76, 85, 101, 98, 87, 105, 91, 114, 94, 86, 115, 35] : [31, 40, 28, 51, 42, 109, 100]\r\n            },\r\n            {\r\n                name: 'Sessions',\r\n                data: slot === 'month' ? [110, 60, 150, 35, 60, 36, 26, 45, 65, 52, 53, 41] : [11, 32, 45, 32, 34, 52, 41]\r\n            }\r\n        ]);\r\n    }, [slot]);\r\n\r\n    return <ReactApexChart options={options} series={series} type=\"area\" height={450} />;\r\n};\r\n\r\nIncomeAreaChart.propTypes = {\r\n    slot: PropTypes.string\r\n};\r\n\r\nexport default IncomeAreaChart;\r\n","import { useEffect, useState } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\n// third-party\r\nimport ReactApexChart from 'react-apexcharts';\r\n\r\n// chart options\r\nconst barChartOptions = {\r\n    chart: {\r\n        type: 'bar',\r\n        height: 365,\r\n        toolbar: {\r\n            show: false\r\n        }\r\n    },\r\n    plotOptions: {\r\n        bar: {\r\n            columnWidth: '45%',\r\n            borderRadius: 4\r\n        }\r\n    },\r\n    dataLabels: {\r\n        enabled: false\r\n    },\r\n    xaxis: {\r\n        categories: ['Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su'],\r\n        axisBorder: {\r\n            show: false\r\n        },\r\n        axisTicks: {\r\n            show: false\r\n        }\r\n    },\r\n    yaxis: {\r\n        show: false\r\n    },\r\n    grid: {\r\n        show: false\r\n    }\r\n};\r\n\r\n// ==============================|| MONTHLY BAR CHART ||============================== //\r\n\r\nconst MonthlyBarChart = () => {\r\n    const theme = useTheme();\r\n\r\n    const { primary, secondary } = theme.palette.text;\r\n    const info = theme.palette.info.light;\r\n\r\n    const [series] = useState([\r\n        {\r\n            data: [80, 95, 70, 42, 65, 55, 78]\r\n        }\r\n    ]);\r\n\r\n    const [options, setOptions] = useState(barChartOptions);\r\n\r\n    useEffect(() => {\r\n        setOptions((prevState) => ({\r\n            ...prevState,\r\n            colors: [info],\r\n            xaxis: {\r\n                labels: {\r\n                    style: {\r\n                        colors: [secondary, secondary, secondary, secondary, secondary, secondary, secondary]\r\n                    }\r\n                }\r\n            },\r\n            tooltip: {\r\n                theme: 'light'\r\n            }\r\n        }));\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [primary, info, secondary]);\r\n\r\n    return (\r\n        <div id=\"chart\">\r\n            <ReactApexChart options={options} series={series} type=\"bar\" height={365} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MonthlyBarChart;\r\n","import { useEffect, useState } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\n// third-party\r\nimport ReactApexChart from 'react-apexcharts';\r\n\r\n// chart options\r\nconst areaChartOptions = {\r\n    chart: {\r\n        height: 340,\r\n        type: 'line',\r\n        toolbar: {\r\n            show: false\r\n        }\r\n    },\r\n    dataLabels: {\r\n        enabled: false\r\n    },\r\n    stroke: {\r\n        curve: 'smooth',\r\n        width: 1.5\r\n    },\r\n    grid: {\r\n        strokeDashArray: 4\r\n    },\r\n    xaxis: {\r\n        type: 'datetime',\r\n        categories: [\r\n            '2018-05-19T00:00:00.000Z',\r\n            '2018-06-19T00:00:00.000Z',\r\n            '2018-07-19T01:30:00.000Z',\r\n            '2018-08-19T02:30:00.000Z',\r\n            '2018-09-19T03:30:00.000Z',\r\n            '2018-10-19T04:30:00.000Z',\r\n            '2018-11-19T05:30:00.000Z',\r\n            '2018-12-19T06:30:00.000Z'\r\n        ],\r\n        labels: {\r\n            format: 'MMM'\r\n        },\r\n        axisBorder: {\r\n            show: false\r\n        },\r\n        axisTicks: {\r\n            show: false\r\n        }\r\n    },\r\n    yaxis: {\r\n        show: false\r\n    },\r\n    tooltip: {\r\n        x: {\r\n            format: 'MM'\r\n        }\r\n    }\r\n};\r\n\r\n// ==============================|| REPORT AREA CHART ||============================== //\r\n\r\nconst ReportAreaChart = () => {\r\n    const theme = useTheme();\r\n\r\n    const { primary, secondary } = theme.palette.text;\r\n    const line = theme.palette.divider;\r\n\r\n    const [options, setOptions] = useState(areaChartOptions);\r\n\r\n    useEffect(() => {\r\n        setOptions((prevState) => ({\r\n            ...prevState,\r\n            colors: [theme.palette.warning.main],\r\n            xaxis: {\r\n                labels: {\r\n                    style: {\r\n                        colors: [secondary, secondary, secondary, secondary, secondary, secondary, secondary, secondary]\r\n                    }\r\n                }\r\n            },\r\n            grid: {\r\n                borderColor: line\r\n            },\r\n            tooltip: {\r\n                theme: 'light'\r\n            },\r\n            legend: {\r\n                labels: {\r\n                    colors: 'grey.500'\r\n                }\r\n            }\r\n        }));\r\n    }, [primary, secondary, line, theme]);\r\n\r\n    const [series] = useState([\r\n        {\r\n            name: 'Series 1',\r\n            data: [58, 115, 28, 83, 63, 75, 35, 55]\r\n        }\r\n    ]);\r\n\r\n    return <ReactApexChart options={options} series={series} type=\"line\" height={345} />;\r\n};\r\n\r\nexport default ReportAreaChart;\r\n","import { useEffect, useState } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\n// third-party\r\nimport ReactApexChart from 'react-apexcharts';\r\n\r\n// chart options\r\nconst columnChartOptions = {\r\n    chart: {\r\n        type: 'bar',\r\n        height: 430,\r\n        toolbar: {\r\n            show: false\r\n        }\r\n    },\r\n    plotOptions: {\r\n        bar: {\r\n            columnWidth: '30%',\r\n            borderRadius: 4\r\n        }\r\n    },\r\n    dataLabels: {\r\n        enabled: false\r\n    },\r\n    stroke: {\r\n        show: true,\r\n        width: 8,\r\n        colors: ['transparent']\r\n    },\r\n    xaxis: {\r\n        categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun']\r\n    },\r\n    yaxis: {\r\n        title: {\r\n            text: '$ (thousands)'\r\n        }\r\n    },\r\n    fill: {\r\n        opacity: 1\r\n    },\r\n    tooltip: {\r\n        y: {\r\n            formatter(val) {\r\n                return `$ ${val} thousands`;\r\n            }\r\n        }\r\n    },\r\n    legend: {\r\n        show: true,\r\n        fontFamily: `'Public Sans', sans-serif`,\r\n        offsetX: 10,\r\n        offsetY: 10,\r\n        labels: {\r\n            useSeriesColors: false\r\n        },\r\n        markers: {\r\n            width: 16,\r\n            height: 16,\r\n            radius: '50%',\r\n            offsexX: 2,\r\n            offsexY: 2\r\n        },\r\n        itemMargin: {\r\n            horizontal: 15,\r\n            vertical: 50\r\n        }\r\n    },\r\n    responsive: [\r\n        {\r\n            breakpoint: 600,\r\n            options: {\r\n                yaxis: {\r\n                    show: false\r\n                }\r\n            }\r\n        }\r\n    ]\r\n};\r\n\r\n// ==============================|| SALES COLUMN CHART ||============================== //\r\n\r\nconst SalesColumnChart = () => {\r\n    const theme = useTheme();\r\n\r\n    const { primary, secondary } = theme.palette.text;\r\n    const line = theme.palette.divider;\r\n\r\n    const warning = theme.palette.warning.main;\r\n    const primaryMain = theme.palette.primary.main;\r\n    const successDark = theme.palette.success.dark;\r\n\r\n    const [series] = useState([\r\n        {\r\n            name: 'Net Profit',\r\n            data: [180, 90, 135, 114, 120, 145]\r\n        },\r\n        {\r\n            name: 'Revenue',\r\n            data: [120, 45, 78, 150, 168, 99]\r\n        }\r\n    ]);\r\n\r\n    const [options, setOptions] = useState(columnChartOptions);\r\n\r\n    useEffect(() => {\r\n        setOptions((prevState) => ({\r\n            ...prevState,\r\n            colors: [warning, primaryMain],\r\n            xaxis: {\r\n                labels: {\r\n                    style: {\r\n                        colors: [secondary, secondary, secondary, secondary, secondary, secondary]\r\n                    }\r\n                }\r\n            },\r\n            yaxis: {\r\n                labels: {\r\n                    style: {\r\n                        colors: [secondary]\r\n                    }\r\n                }\r\n            },\r\n            grid: {\r\n                borderColor: line\r\n            },\r\n            tooltip: {\r\n                theme: 'light'\r\n            },\r\n            legend: {\r\n                position: 'top',\r\n                horizontalAlign: 'right',\r\n                labels: {\r\n                    colors: 'grey.500'\r\n                }\r\n            }\r\n        }));\r\n    }, [primary, secondary, line, warning, primaryMain, successDark]);\r\n\r\n    return (\r\n        <div id=\"chart\">\r\n            <ReactApexChart options={options} series={series} type=\"bar\" height={430} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SalesColumnChart;\r\n","import PropTypes from \"prop-types\";\r\n\r\n// material-ui\r\nimport { Box, Chip, Grid, Stack, Typography } from \"@mui/material\";\r\n\r\n// project import\r\nimport MainCard from \"../../../components/MainCard\";\r\n\r\n// assets\r\nimport { RiseOutlined, FallOutlined } from \"@ant-design/icons\";\r\n\r\n// ==============================|| STATISTICS - ECOMMERCE CARD  ||============================== //\r\n\r\nconst AnalyticEcommerce = ({\r\n  color,\r\n  title,\r\n  count,\r\n  percentage,\r\n  isLoss,\r\n  extra,\r\n  type,\r\n}) => (\r\n  <MainCard contentSX={{ p: 2.25 }}>\r\n    <Stack spacing={0.5}>\r\n      <Typography variant=\"h6\" color=\"textSecondary\">\r\n        {title}\r\n      </Typography>\r\n      <Grid container alignItems=\"center\">\r\n        <Grid item>\r\n          <Typography variant=\"h4\" color=\"inherit\">\r\n            {count}\r\n          </Typography>\r\n        </Grid>\r\n        {percentage && (\r\n          <Grid item>\r\n            <Chip\r\n              variant=\"combined\"\r\n              color={color}\r\n              icon={\r\n                <>\r\n                  {!isLoss && (\r\n                    <RiseOutlined\r\n                      style={{ fontSize: \"0.75rem\", color: \"inherit\" }}\r\n                    />\r\n                  )}\r\n                  {isLoss && (\r\n                    <FallOutlined\r\n                      style={{ fontSize: \"0.75rem\", color: \"inherit\" }}\r\n                    />\r\n                  )}\r\n                </>\r\n              }\r\n              label={`${percentage}%`}\r\n              sx={{ ml: 1.25, pl: 1 }}\r\n              size=\"small\"\r\n            />\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n    </Stack>\r\n     <Box sx={{ pt: 2.25 }}>\r\n      <Typography variant=\"caption\" color=\"textSecondary\">\r\n         {type === \"earnings\" ? \"You made an extra\" : type === \"videos\" ? \"You have uploaded\" : type === \"courses\" ? \"You have created \" : \"You have got\"} &nbsp;\r\n        <Typography\r\n          component=\"span\"\r\n          variant=\"caption\"\r\n          sx={{ color: `${color || \"primary\"}.main` }}\r\n        >\r\n          {extra}\r\n        </Typography>{\" \"}\r\n        {type === \"earnings\" ? \" earnings\" : type === \"courses\" ? \" courses\" : type === \"videos\" ? \" videos\" : \" New Students\" } this year.\r\n      </Typography>\r\n    </Box>\r\n   \r\n  </MainCard>\r\n);\r\n\r\nAnalyticEcommerce.propTypes = {\r\n  color: PropTypes.string,\r\n  title: PropTypes.string,\r\n  count: PropTypes.string,\r\n  percentage: PropTypes.number,\r\n  isLoss: PropTypes.bool,\r\n  extra: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\r\n};\r\n\r\nAnalyticEcommerce.defaultProps = {\r\n  color: \"primary\",\r\n};\r\n\r\nexport default AnalyticEcommerce;\r\n","import { useState } from \"react\";\r\n\r\n// material-ui\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Grid,\r\n  List,\r\n  ListItemAvatar,\r\n  ListItemButton,\r\n  ListItemSecondaryAction,\r\n  ListItemText,\r\n  MenuItem,\r\n  Stack,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\n\r\n// project import\r\nimport OrdersTable from \"./OrdersTable\";\r\nimport IncomeAreaChart from \"./IncomeAreaChart\";\r\nimport MonthlyBarChart from \"./MonthlyBarChart\";\r\nimport ReportAreaChart from \"./ReportAreaChart\";\r\nimport SalesColumnChart from \"./SalesColumnChart\";\r\nimport MainCard from \"../../components/MainCard\";\r\nimport AnalyticEcommerce from \"../../components/cards/statistics/AnalyticEcommerce\";\r\n\r\n// assets\r\nimport { TransactionOutlined } from \"@ant-design/icons\";\r\n\r\n// avatar style\r\nconst avatarSX = {\r\n  width: 36,\r\n  height: 36,\r\n  fontSize: \"1rem\",\r\n};\r\n\r\n// action style\r\nconst actionSX = {\r\n  mt: 0.75,\r\n  ml: 1,\r\n  top: \"auto\",\r\n  right: \"auto\",\r\n  alignSelf: \"flex-start\",\r\n  transform: \"none\",\r\n};\r\n\r\n// sales report status\r\nconst status = [\r\n  {\r\n    value: \"today\",\r\n    label: \"Today\",\r\n  },\r\n  {\r\n    value: \"month\",\r\n    label: \"This Month\",\r\n  },\r\n  {\r\n    value: \"year\",\r\n    label: \"This Year\",\r\n  },\r\n];\r\n\r\n// ==============================|| DASHBOARD - DEFAULT ||============================== //\r\n\r\nconst DashboardDefault = () => {\r\n  const [value, setValue] = useState(\"today\");\r\n  const [slot, setSlot] = useState(\"week\");\r\n\r\n  return (\r\n    <Grid container rowSpacing={4.5} columnSpacing={2.75}>\r\n      {/* row 1 */}\r\n      <Grid item xs={12} sx={{ mb: -2.25 }}>\r\n        <Typography variant=\"h5\">Admin Dashboard</Typography>\r\n      </Grid>\r\n      <Grid item xs={12} sm={6} md={4} lg={3}>\r\n        <AnalyticEcommerce\r\n          title=\"Total Students\"\r\n          percentage={20}\r\n          count=\"200,000\"\r\n          extra=\"15,000\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6} md={4} lg={3}>\r\n        <AnalyticEcommerce\r\n          title=\"Total Earnings\"\r\n          count=\"78,250\"\r\n          percentage={70.5}\r\n          extra=\"8,900\"\r\n          type=\"earnings\"\r\n          isLoss\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6} md={4} lg={3}>\r\n        <AnalyticEcommerce\r\n          title=\"Total videos uploads\"\r\n          extra=\"100\"\r\n          count=\"700\"\r\n          type=\"videos\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6} md={4} lg={3}>\r\n        <AnalyticEcommerce\r\n          title=\"Total Course\"\r\n          extra=\"5\"\r\n          type=\"courses\"\r\n          count=\"10\"\r\n        />\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        md={8}\r\n        sx={{ display: { sm: \"none\", md: \"block\", lg: \"none\" } }}\r\n      />\r\n      {/* row 2 */}\r\n      <Grid item xs={12} md={7} lg={8}>\r\n        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n          <Grid item>\r\n            <Typography variant=\"h5\">Students Engagment</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Stack direction=\"row\" alignItems=\"center\" spacing={0}>\r\n              <Button\r\n                size=\"small\"\r\n                onClick={() => setSlot(\"month\")}\r\n                color={slot === \"month\" ? \"primary\" : \"secondary\"}\r\n                variant={slot === \"month\" ? \"outlined\" : \"text\"}\r\n              >\r\n                Month\r\n              </Button>\r\n              <Button\r\n                size=\"small\"\r\n                onClick={() => setSlot(\"week\")}\r\n                color={slot === \"week\" ? \"primary\" : \"secondary\"}\r\n                variant={slot === \"week\" ? \"outlined\" : \"text\"}\r\n              >\r\n                Week\r\n              </Button>\r\n            </Stack>\r\n          </Grid>\r\n        </Grid>\r\n        <MainCard content={false} sx={{ mt: 1.5 }}>\r\n          <Box sx={{ pt: 1, pr: 2 }}>\r\n            <IncomeAreaChart slot={slot} />\r\n          </Box>\r\n        </MainCard>\r\n      </Grid>\r\n      <Grid item xs={12} md={5} lg={4}>\r\n        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n          <Grid item>\r\n            <Typography variant=\"h5\">Income Overview</Typography>\r\n          </Grid>\r\n          <Grid item />\r\n        </Grid>\r\n        <MainCard sx={{ mt: 2 }} content={false}>\r\n          <Box sx={{ p: 3, pb: 0 }}>\r\n            <Stack spacing={2}>\r\n              <Typography variant=\"h6\" color=\"textSecondary\">\r\n                This Week Statistics\r\n              </Typography>\r\n              <Typography variant=\"h3\">N70,650</Typography>\r\n            </Stack>\r\n          </Box>\r\n          <MonthlyBarChart />\r\n        </MainCard>\r\n      </Grid>\r\n      <Grid item xs={12} md={7} lg={8}>\r\n        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n          <Grid item>\r\n            <Typography variant=\"h5\">Recent Enrollments</Typography>\r\n          </Grid>\r\n          <Grid item />\r\n        </Grid>\r\n        <MainCard sx={{ mt: 2 }} content={false}>\r\n          <OrdersTable />\r\n        </MainCard>\r\n      </Grid>\r\n      <Grid item xs={12} md={5} lg={4}>\r\n        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n          <Grid item>\r\n            <Typography variant=\"h5\">Yearly Report</Typography>\r\n          </Grid>\r\n          <Grid item />\r\n        </Grid>\r\n        <MainCard sx={{ mt: 2 }} content={false}>\r\n          <List sx={{ p: 0, \"& .MuiListItemButton-root\": { py: 2 } }}>\r\n            <ListItemButton divider>\r\n              <ListItemText primary=\"Students Growth\" />\r\n              <Typography variant=\"h5\">+45.14%</Typography>\r\n            </ListItemButton>\r\n            <ListItemButton divider>\r\n              <ListItemText primary=\"Income Growth\" />\r\n              <Typography variant=\"h5\">30.58%</Typography>\r\n            </ListItemButton>\r\n          </List>\r\n          <ReportAreaChart />\r\n        </MainCard>\r\n      </Grid>\r\n      <Grid item xs={12} md={7} lg={8}>\r\n        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n          <Grid item>\r\n            <Typography variant=\"h5\">Earnings Report</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              id=\"standard-select-currency\"\r\n              size=\"small\"\r\n              select\r\n              value={value}\r\n              onChange={(e) => setValue(e.target.value)}\r\n              sx={{\r\n                \"& .MuiInputBase-input\": { py: 0.5, fontSize: \"0.875rem\" },\r\n              }}\r\n            >\r\n              {status.map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Grid>\r\n        </Grid>\r\n        <MainCard sx={{ mt: 1.75 }}>\r\n          <Stack spacing={1.5} sx={{ mb: -12 }}>\r\n            <Typography variant=\"h6\" color=\"secondary\">\r\n              Net Profit\r\n            </Typography>\r\n            <Typography variant=\"h4\">N1560</Typography>\r\n          </Stack>\r\n          <SalesColumnChart />\r\n        </MainCard>\r\n      </Grid>\r\n      <Grid item xs={12} md={5} lg={4}>\r\n        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n          <Grid item>\r\n            <Typography variant=\"h5\">Transaction History</Typography>\r\n          </Grid>\r\n          <Grid item />\r\n        </Grid>\r\n        <MainCard sx={{ mt: 2 }} content={false}>\r\n          <List\r\n            component=\"nav\"\r\n            sx={{\r\n              px: 0,\r\n              py: 0,\r\n              \"& .MuiListItemButton-root\": {\r\n                py: 1.5,\r\n                \"& .MuiAvatar-root\": avatarSX,\r\n                \"& .MuiListItemSecondaryAction-root\": {\r\n                  ...actionSX,\r\n                  position: \"relative\",\r\n                },\r\n              },\r\n            }}\r\n          >\r\n            <ListItemButton divider>\r\n              <ListItemAvatar>\r\n                <Avatar\r\n                  sx={{\r\n                    color: \"success.main\",\r\n                    bgcolor: \"success.lighter\",\r\n                  }}\r\n                >\r\n                  <TransactionOutlined />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText\r\n                primary={\r\n                  <Typography variant=\"subtitle1\">\r\n                    New alert recieved #002434\r\n                  </Typography>\r\n                }\r\n                secondary=\"Today, 2:00 AM\"\r\n              />\r\n              <ListItemSecondaryAction>\r\n                <Stack alignItems=\"flex-end\">\r\n                  <Typography variant=\"subtitle1\" noWrap>\r\n                    + N4,430\r\n                  </Typography>\r\n                  <Typography variant=\"h6\" color=\"secondary\" noWrap>\r\n                    78%\r\n                  </Typography>\r\n                </Stack>\r\n              </ListItemSecondaryAction>\r\n            </ListItemButton>\r\n            <ListItemButton divider>\r\n              <ListItemAvatar>\r\n                <Avatar\r\n                  sx={{\r\n                    color: \"success.main\",\r\n                    bgcolor: \"success.lighter\",\r\n                  }}\r\n                >\r\n                  <TransactionOutlined />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText\r\n                primary={\r\n                  <Typography variant=\"subtitle1\">\r\n                    Referral bonus recieved #984947\r\n                  </Typography>\r\n                }\r\n                secondary=\"5 August, 1:45 PM\"\r\n              />\r\n              <ListItemSecondaryAction>\r\n                <Stack alignItems=\"flex-end\">\r\n                  <Typography variant=\"subtitle1\" noWrap>\r\n                    + N3000\r\n                  </Typography>\r\n                  <Typography variant=\"h6\" color=\"secondary\" noWrap>\r\n                    8%\r\n                  </Typography>\r\n                </Stack>\r\n              </ListItemSecondaryAction>\r\n            </ListItemButton>\r\n            <ListItemButton>\r\n              <ListItemAvatar>\r\n                <Avatar\r\n                  sx={{\r\n                    color: \"success.main\",\r\n                    bgcolor: \"success.lighter\",\r\n                  }}\r\n                >\r\n                  <TransactionOutlined />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText\r\n                primary={\r\n                  <Typography variant=\"subtitle1\">\r\n                    New alert recieved #988784\r\n                  </Typography>\r\n                }\r\n                secondary=\"7 hours ago\"\r\n              />\r\n              <ListItemSecondaryAction>\r\n                <Stack alignItems=\"flex-end\">\r\n                  <Typography variant=\"subtitle1\" noWrap>\r\n                    + N20,000\r\n                  </Typography>\r\n                  <Typography variant=\"h6\" color=\"secondary\" noWrap>\r\n                    16%\r\n                  </Typography>\r\n                </Stack>\r\n              </ListItemSecondaryAction>\r\n            </ListItemButton>\r\n          </List>\r\n        </MainCard>\r\n        {/* <MainCard sx={{ mt: 2 }}>\r\n          <Stack spacing={3}>\r\n            <Grid container justifyContent=\"space-between\" alignItems=\"center\">\r\n              <Grid item>\r\n                <Stack>\r\n                  <Typography variant=\"h5\" noWrap>\r\n                    Help & Support Team\r\n                  </Typography>\r\n                  <Typography variant=\"caption\" color=\"secondary\" noWrap>\r\n                    Let us help you!\r\n                  </Typography>\r\n                </Stack>\r\n              </Grid>\r\n              <Grid item>\r\n                <AvatarGroup\r\n                  sx={{ \"& .MuiAvatar-root\": { width: 32, height: 32 } }}\r\n                >\r\n                  <Avatar alt=\"Remy Sharp\" src={avatar1} />\r\n                  <Avatar alt=\"Travis Howard\" src={avatar2} />\r\n                  <Avatar alt=\"Cindy Baker\" src={avatar3} />\r\n                </AvatarGroup>\r\n              </Grid>\r\n            </Grid>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              sx={{ textTransform: \"capitalize\" }}\r\n            >\r\n              Need Help?\r\n            </Button>\r\n          </Stack>\r\n        </MainCard> */}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default DashboardDefault;\r\n"],"sourceRoot":""}