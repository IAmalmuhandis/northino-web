{"version":3,"sources":["tutorDashboard/components/@extended/Dot.js","../node_modules/@mui/material/AvatarGroup/avatarGroupClasses.js","../node_modules/@mui/material/AvatarGroup/AvatarGroup.js","tutorDashboard/pages/dashboard/OrdersTable.js","tutorDashboard/pages/dashboard/IncomeAreaChart.js","tutorDashboard/pages/dashboard/MonthlyBarChart.js","tutorDashboard/pages/dashboard/ReportAreaChart.js","tutorDashboard/pages/dashboard/SalesColumnChart.js","tutorDashboard/components/cards/statistics/AnalyticEcommerce.js","tutorDashboard/assets/images/users/ceo.jpg","tutorDashboard/assets/images/users/kalsom.jpg","tutorDashboard/assets/images/users/sanee.jpg","tutorDashboard/pages/dashboard/index.js"],"names":["Dot","main","color","size","theme","useTheme","palette","secondary","error","warning","info","success","primary","sx","width","height","borderRadius","bgcolor","getAvatarGroupUtilityClass","slot","generateUtilityClass","avatarGroupClasses","generateUtilityClasses","_excluded","SPACINGS","small","medium","AvatarGroupRoot","styled","name","overridesResolver","props","styles","_extends","avatar","root","avatarClasses","border","vars","background","default","boxSizing","marginLeft","AvatarGroupAvatar","Avatar","AvatarGroup","React","inProps","ref","_componentsProps$addi","_componentsProps$addi2","useThemeProps","childrenProp","children","className","componentsProps","max","spacing","total","variant","other","_objectWithoutPropertiesLoose","clampedMax","ownerState","classes","composeClasses","useUtilityClasses","toArray","filter","child","totalAvatars","length","Math","min","maxAvatars","extraAvatars","undefined","_jsxs","clsx","additionalAvatar","style","slice","reverse","map","index","createData","trackingNo","fat","carbs","protein","rows","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","el","sort","headCells","id","align","disablePadding","label","OrderTableHead","TableHead","TableRow","headCell","TableCell","padding","sortDirection","OrderStatus","title","status","Stack","direction","alignItems","Typography","OrderTable","useState","selected","Box","TableContainer","overflowX","position","display","maxWidth","whiteSpace","Table","pl","pr","TableBody","row","isItemSelected","indexOf","labelId","hover","role","tabIndex","component","scope","Link","RouterLink","to","value","displayType","thousandSeparator","prefix","areaChartOptions","chart","type","toolbar","show","dataLabels","enabled","stroke","curve","grid","strokeDashArray","IncomeAreaChart","text","line","divider","options","setOptions","useEffect","prevState","colors","xaxis","categories","labels","axisBorder","tickAmount","yaxis","borderColor","tooltip","data","series","setSeries","barChartOptions","plotOptions","bar","columnWidth","axisTicks","MonthlyBarChart","light","format","x","ReportAreaChart","legend","columnChartOptions","fill","opacity","y","formatter","val","fontFamily","offsetX","offsetY","useSeriesColors","markers","radius","offsexX","offsexY","itemMargin","horizontal","vertical","responsive","breakpoint","SalesColumnChart","primaryMain","successDark","dark","horizontalAlign","AnalyticEcommerce","count","percentage","isLoss","extra","MainCard","contentSX","p","Grid","container","item","Chip","icon","RiseOutlined","fontSize","FallOutlined","ml","backgroundColor","pt","defaultProps","avatarSX","actionSX","mt","top","right","alignSelf","transform","DashboardDefault","setValue","setSlot","rowSpacing","columnSpacing","xs","mb","sm","md","lg","justifyContent","Button","onClick","content","pb","List","py","ListItemButton","ListItemText","TextField","select","onChange","e","target","option","MenuItem","px","ListItemAvatar","TransactionOutlined","ListItemSecondaryAction","noWrap","alt","src","avatar1","avatar2","avatar3","textTransform"],"mappings":"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","file":"static/js/9.f43b2242.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Box } from '@mui/material';\r\n\r\nconst Dot = ({ color, size }) => {\r\n    const theme = useTheme();\r\n    let main;\r\n    switch (color) {\r\n        case 'secondary':\r\n            main = theme.palette.secondary.main;\r\n            break;\r\n        case 'error':\r\n            main = theme.palette.error.main;\r\n            break;\r\n        case 'warning':\r\n            main = theme.palette.warning.main;\r\n            break;\r\n        case 'info':\r\n            main = theme.palette.info.main;\r\n            break;\r\n        case 'success':\r\n            main = theme.palette.success.main;\r\n            break;\r\n        case 'primary':\r\n        default:\r\n            main = theme.palette.primary.main;\r\n    }\r\n\r\n    return (\r\n        <Box\r\n            sx={{\r\n                width: size || 8,\r\n                height: size || 8,\r\n                borderRadius: '50%',\r\n                bgcolor: main\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nDot.propTypes = {\r\n    color: PropTypes.string,\r\n    size: PropTypes.number\r\n};\r\n\r\nexport default Dot;\r\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getAvatarGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiAvatarGroup', slot);\n}\nconst avatarGroupClasses = generateUtilityClasses('MuiAvatarGroup', ['root', 'avatar']);\nexport default avatarGroupClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"componentsProps\", \"max\", \"spacing\", \"total\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { isFragment } from 'react-is';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Avatar, { avatarClasses } from '../Avatar';\nimport avatarGroupClasses, { getAvatarGroupUtilityClass } from './avatarGroupClasses';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst SPACINGS = {\n  small: -16,\n  medium: null\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar']\n  };\n  return composeClasses(slots, getAvatarGroupUtilityClass, classes);\n};\n\nconst AvatarGroupRoot = styled('div', {\n  name: 'MuiAvatarGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${avatarGroupClasses.avatar}`]: styles.avatar\n  }, styles.root)\n})(({\n  theme\n}) => ({\n  [`& .${avatarClasses.root}`]: {\n    border: `2px solid ${(theme.vars || theme).palette.background.default}`,\n    boxSizing: 'content-box',\n    marginLeft: -8,\n    '&:last-child': {\n      marginLeft: 0\n    }\n  },\n  display: 'flex',\n  flexDirection: 'row-reverse'\n}));\nconst AvatarGroupAvatar = styled(Avatar, {\n  name: 'MuiAvatarGroup',\n  slot: 'Avatar',\n  overridesResolver: (props, styles) => styles.avatar\n})(({\n  theme\n}) => ({\n  border: `2px solid ${(theme.vars || theme).palette.background.default}`,\n  boxSizing: 'content-box',\n  marginLeft: -8,\n  '&:last-child': {\n    marginLeft: 0\n  }\n}));\nconst AvatarGroup = /*#__PURE__*/React.forwardRef(function AvatarGroup(inProps, ref) {\n  var _componentsProps$addi, _componentsProps$addi2;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAvatarGroup'\n  });\n\n  const {\n    children: childrenProp,\n    className,\n    componentsProps = {},\n    max = 5,\n    spacing = 'medium',\n    total,\n    variant = 'circular'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  let clampedMax = max < 2 ? 2 : max;\n\n  const ownerState = _extends({}, props, {\n    max,\n    spacing,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const children = React.Children.toArray(childrenProp).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The AvatarGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  });\n  const totalAvatars = total || children.length;\n\n  if (totalAvatars === clampedMax) {\n    clampedMax += 1;\n  }\n\n  clampedMax = Math.min(totalAvatars + 1, clampedMax);\n  const maxAvatars = Math.min(children.length, clampedMax - 1);\n  const extraAvatars = Math.max(totalAvatars - clampedMax, totalAvatars - maxAvatars, 0);\n  const marginLeft = spacing && SPACINGS[spacing] !== undefined ? SPACINGS[spacing] : -spacing;\n  return /*#__PURE__*/_jsxs(AvatarGroupRoot, _extends({\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: [extraAvatars ? /*#__PURE__*/_jsxs(AvatarGroupAvatar, _extends({\n      ownerState: ownerState,\n      variant: variant\n    }, componentsProps.additionalAvatar, {\n      className: clsx(classes.avatar, (_componentsProps$addi = componentsProps.additionalAvatar) == null ? void 0 : _componentsProps$addi.className),\n      style: _extends({\n        marginLeft\n      }, (_componentsProps$addi2 = componentsProps.additionalAvatar) == null ? void 0 : _componentsProps$addi2.style),\n      children: [\"+\", extraAvatars]\n    })) : null, children.slice(0, maxAvatars).reverse().map((child, index) => {\n      return /*#__PURE__*/React.cloneElement(child, {\n        className: clsx(child.props.className, classes.avatar),\n        style: _extends({\n          // Consistent with \"&:last-child\" styling for the default spacing,\n          // we do not apply custom marginLeft spacing on the last child\n          marginLeft: index === maxAvatars - 1 ? undefined : marginLeft\n        }, child.props.style),\n        variant: child.props.variant || variant\n      });\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? AvatarGroup.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The avatars to stack.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The props used for each slot inside the AvatarGroup.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    additionalAvatar: PropTypes.object\n  }),\n\n  /**\n   * Max avatars to show before +x.\n   * @default 5\n   */\n  max: chainPropTypes(PropTypes.number, props => {\n    if (props.max < 2) {\n      return new Error(['MUI: The prop `max` should be equal to 2 or above.', 'A value below is clamped to 2.'].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * Spacing between avatars.\n   * @default 'medium'\n   */\n  spacing: PropTypes.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.number]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The total number of avatars. Used for calculating the number of extra avatars.\n   * @default children.length\n   */\n  total: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * @default 'circular'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['circular', 'rounded', 'square']), PropTypes.string])\n} : void 0;\nexport default AvatarGroup;","import PropTypes from \"prop-types\";\r\nimport { useState } from \"react\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\n\r\n// material-ui\r\nimport {\r\n  Box,\r\n  Link,\r\n  Stack,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n} from \"@mui/material\";\r\n\r\n// third-party\r\nimport NumberFormat from \"react-number-format\";\r\n\r\n// project import\r\nimport Dot from \"../../components/@extended/Dot\";\r\n\r\nfunction createData(trackingNo, name, fat, carbs, protein) {\r\n  return { trackingNo, name, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData(84564564, \"Canva Beginners Tutorial\", \"06/07/2022\", 2, 40570),\r\n  createData(98764564, \"HTML For Beginners\", \"06/07/2022\", 0, 180139),\r\n  createData(98756325, \"Mobile App Development Course\", \"06/07/2022\", 1, 90989),\r\n  createData(98652366, \"CSS For Beginners\", \"06/07/2022\", 1, 10239),\r\n  createData(13286564, \"Digital Marketing Course\", \"06/07/2022\", 1, 83348),\r\n  createData(86739658, \"Content Creation\", \"06/07/2022\", 0, 410780),\r\n  createData(13256498, \"Fast Typing Course\", \"06/07/2022\", 2, 70999),\r\n  createData(98753263, \"Business Management\", \"06/07/2022\", 2, 10570),\r\n  createData(98753275, \"Microsoft Office Tutorial\", \"06/07/2022\", 1, 98063),\r\n  createData(98753291, \"CorelDraw\", \"06/07/2022\", 0, 14001),\r\n];\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) {\r\n      return order;\r\n    }\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\n// ==============================|| ORDER TABLE - HEADER CELL ||============================== //\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"trackingNo\",\r\n    align: \"left\",\r\n    disablePadding: false,\r\n    label: \"Tracking No.\",\r\n  },\r\n  {\r\n    id: \"name\",\r\n    align: \"left\",\r\n    disablePadding: true,\r\n    label: \"Course Name\",\r\n  },\r\n  {\r\n    id: \"fat\",\r\n    align: \"right\",\r\n    disablePadding: false,\r\n    label: \"Date\",\r\n  },\r\n  {\r\n    id: \"carbs\",\r\n    align: \"left\",\r\n    disablePadding: false,\r\n\r\n    label: \"Status\",\r\n  },\r\n  {\r\n    id: \"protein\",\r\n    align: \"right\",\r\n    disablePadding: false,\r\n    label: \"Amount\",\r\n  },\r\n];\r\n\r\n// ==============================|| ORDER TABLE - HEADER ||============================== //\r\n\r\nfunction OrderTableHead({ order, orderBy }) {\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.align}\r\n            padding={headCell.disablePadding ? \"none\" : \"normal\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            {headCell.label}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nOrderTableHead.propTypes = {\r\n  order: PropTypes.string,\r\n  orderBy: PropTypes.string,\r\n};\r\n\r\n// ==============================|| ORDER TABLE - STATUS ||============================== //\r\n\r\nconst OrderStatus = ({ status }) => {\r\n  let color;\r\n  let title;\r\n\r\n  switch (status) {\r\n    case 0:\r\n      color = \"warning\";\r\n      title = \"Pending\";\r\n      break;\r\n    case 1:\r\n      color = \"success\";\r\n      title = \"Approved\";\r\n      break;\r\n    case 2:\r\n      color = \"error\";\r\n      title = \"Rejected\";\r\n      break;\r\n    default:\r\n      color = \"primary\";\r\n      title = \"None\";\r\n  }\r\n\r\n  return (\r\n    <Stack direction=\"row\" spacing={1} alignItems=\"center\">\r\n      <Dot color={color} />\r\n      <Typography>{title}</Typography>\r\n    </Stack>\r\n  );\r\n};\r\n\r\nOrderStatus.propTypes = {\r\n  status: PropTypes.number,\r\n};\r\n\r\n// ==============================|| ORDER TABLE ||============================== //\r\n\r\nexport default function OrderTable() {\r\n  const [order] = useState(\"asc\");\r\n  const [orderBy] = useState(\"trackingNo\");\r\n  const [selected] = useState([]);\r\n\r\n  const isSelected = (trackingNo) => selected.indexOf(trackingNo) !== -1;\r\n\r\n  return (\r\n    <Box>\r\n      <TableContainer\r\n        sx={{\r\n          width: \"100%\",\r\n          overflowX: \"auto\",\r\n          position: \"relative\",\r\n          display: \"block\",\r\n          maxWidth: \"100%\",\r\n          \"& td, & th\": { whiteSpace: \"nowrap\" },\r\n        }}\r\n      >\r\n        <Table\r\n          aria-labelledby=\"tableTitle\"\r\n          sx={{\r\n            \"& .MuiTableCell-root:first-child\": {\r\n              pl: 2,\r\n            },\r\n            \"& .MuiTableCell-root:last-child\": {\r\n              pr: 3,\r\n            },\r\n          }}\r\n        >\r\n          <OrderTableHead order={order} orderBy={orderBy} />\r\n          <TableBody>\r\n            {stableSort(rows, getComparator(order, orderBy)).map(\r\n              (row, index) => {\r\n                const isItemSelected = isSelected(row.trackingNo);\r\n                const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                return (\r\n                  <TableRow\r\n                    hover\r\n                    role=\"checkbox\"\r\n                    sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\r\n                    aria-checked={isItemSelected}\r\n                    tabIndex={-1}\r\n                    key={row.trackingNo}\r\n                    selected={isItemSelected}\r\n                  >\r\n                    <TableCell\r\n                      component=\"th\"\r\n                      id={labelId}\r\n                      scope=\"row\"\r\n                      align=\"left\"\r\n                    >\r\n                      <Link color=\"secondary\" component={RouterLink} to=\"\">\r\n                        {row.trackingNo}\r\n                      </Link>\r\n                    </TableCell>\r\n                    <TableCell align=\"left\">{row.name}</TableCell>\r\n                    <TableCell align=\"right\">{row.fat}</TableCell>\r\n                    <TableCell align=\"left\">\r\n                      <OrderStatus status={row.carbs} />\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">\r\n                      <NumberFormat\r\n                        value={row.protein}\r\n                        displayType=\"text\"\r\n                        thousandSeparator\r\n                        prefix=\"N\"\r\n                      />\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              }\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Box>\r\n  );\r\n}\r\n","/** @format */\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\n// material-ui\r\nimport { useTheme } from \"@mui/material/styles\";\r\n\r\n// third-party\r\nimport ReactApexChart from \"react-apexcharts\";\r\n\r\n// chart options\r\nconst areaChartOptions = {\r\n  chart: {\r\n    height: 450,\r\n    type: \"area\",\r\n    toolbar: {\r\n      show: false,\r\n    },\r\n  },\r\n  dataLabels: {\r\n    enabled: false,\r\n  },\r\n  stroke: {\r\n    curve: \"smooth\",\r\n    width: 2,\r\n  },\r\n  grid: {\r\n    strokeDashArray: 0,\r\n  },\r\n};\r\n\r\n// ==============================|| INCOME AREA CHART ||============================== //\r\n\r\nconst IncomeAreaChart = ({ slot }) => {\r\n  const theme = useTheme();\r\n\r\n  const { primary, secondary } = theme.palette.text;\r\n  const line = theme.palette.divider;\r\n\r\n  const [options, setOptions] = useState(areaChartOptions);\r\n\r\n  useEffect(() => {\r\n    setOptions((prevState) => ({\r\n      ...prevState,\r\n      colors: [\"#FAD02C\", \"#333652\"],\r\n      xaxis: {\r\n        categories:\r\n          slot === \"month\"\r\n            ? [\r\n                \"Jan\",\r\n                \"Feb\",\r\n                \"Mar\",\r\n                \"Apr\",\r\n                \"May\",\r\n                \"Jun\",\r\n                \"Jul\",\r\n                \"Aug\",\r\n                \"Sep\",\r\n                \"Oct\",\r\n                \"Nov\",\r\n                \"Dec\",\r\n              ]\r\n            : [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"],\r\n        labels: {\r\n          style: {\r\n            colors: [\r\n              \"#333652\",\r\n              \"#333652\",\r\n              \"#333652\",\r\n              \"#333652\",\r\n              \"#333652\",\r\n              \"#333652\",\r\n              \"#333652\",\r\n              \"#333652\",\r\n              \"#333652\",\r\n              \"#333652\",\r\n              \"#333652\",\r\n              \"#333652\",\r\n            ],\r\n          },\r\n        },\r\n        axisBorder: {\r\n          show: true,\r\n          color: line,\r\n        },\r\n        tickAmount: slot === \"month\" ? 11 : 7,\r\n      },\r\n      yaxis: {\r\n        labels: {\r\n          style: {\r\n            colors: [\"#333652\"],\r\n          },\r\n        },\r\n      },\r\n      grid: {\r\n        borderColor: line,\r\n      },\r\n      tooltip: {\r\n        theme: \"light\",\r\n      },\r\n    }));\r\n  }, [primary, secondary, line, theme, slot]);\r\n\r\n  const [series, setSeries] = useState([\r\n    {\r\n      name: \"Page Views\",\r\n      data: [0, 86, 28, 115, 48, 210, 136],\r\n    },\r\n    {\r\n      name: \"Sessions\",\r\n      data: [0, 43, 14, 56, 24, 105, 68],\r\n    },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    setSeries([\r\n      {\r\n        name: \"Page Views\",\r\n        data:\r\n          slot === \"month\"\r\n            ? [76, 85, 101, 98, 87, 105, 91, 114, 94, 86, 115, 35]\r\n            : [31, 40, 28, 51, 42, 109, 100],\r\n      },\r\n      {\r\n        name: \"Sessions\",\r\n        data:\r\n          slot === \"month\"\r\n            ? [110, 60, 150, 35, 60, 36, 26, 45, 65, 52, 53, 41]\r\n            : [11, 32, 45, 32, 34, 52, 41],\r\n      },\r\n    ]);\r\n  }, [slot]);\r\n\r\n  return (\r\n    <ReactApexChart\r\n      options={options}\r\n      series={series}\r\n      type=\"area\"\r\n      height={450}\r\n    />\r\n  );\r\n};\r\n\r\nIncomeAreaChart.propTypes = {\r\n  slot: PropTypes.string,\r\n};\r\n\r\nexport default IncomeAreaChart;\r\n","import { useEffect, useState } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\n// third-party\r\nimport ReactApexChart from 'react-apexcharts';\r\n\r\n// chart options\r\nconst barChartOptions = {\r\n    chart: {\r\n        type: 'bar',\r\n        height: 365,\r\n        toolbar: {\r\n            show: false\r\n        }\r\n    },\r\n    plotOptions: {\r\n        bar: {\r\n            columnWidth: '45%',\r\n            borderRadius: 4\r\n        }\r\n    },\r\n    dataLabels: {\r\n        enabled: false\r\n    },\r\n    xaxis: {\r\n        categories: ['Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su'],\r\n        axisBorder: {\r\n            show: false\r\n        },\r\n        axisTicks: {\r\n            show: false\r\n        }\r\n    },\r\n    yaxis: {\r\n        show: false\r\n    },\r\n    grid: {\r\n        show: false\r\n    }\r\n};\r\n\r\n// ==============================|| MONTHLY BAR CHART ||============================== //\r\n\r\nconst MonthlyBarChart = () => {\r\n    const theme = useTheme();\r\n\r\n    const { primary, secondary } = theme.palette.text;\r\n    const info = theme.palette.info.light;\r\n\r\n    const [series] = useState([\r\n        {\r\n            data: [80, 95, 70, 42, 65, 55, 78]\r\n        }\r\n    ]);\r\n\r\n    const [options, setOptions] = useState(barChartOptions);\r\n\r\n    useEffect(() => {\r\n        setOptions((prevState) => ({\r\n            ...prevState,\r\n            colors: [\"#333652\"],\r\n            xaxis: {\r\n                labels: {\r\n                    style: {\r\n                        colors: [secondary, secondary, secondary, secondary, secondary, secondary, secondary]\r\n                    }\r\n                }\r\n            },\r\n            tooltip: {\r\n                theme: 'light'\r\n            }\r\n        }));\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [primary, info, secondary]);\r\n\r\n    return (\r\n        <div id=\"chart\">\r\n            <ReactApexChart options={options} series={series} type=\"bar\" height={365} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MonthlyBarChart;\r\n","import { useEffect, useState } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\n// third-party\r\nimport ReactApexChart from 'react-apexcharts';\r\n\r\n// chart options\r\nconst areaChartOptions = {\r\n    chart: {\r\n        height: 340,\r\n        type: 'line',\r\n        toolbar: {\r\n            show: false\r\n        }\r\n    },\r\n    dataLabels: {\r\n        enabled: false\r\n    },\r\n    stroke: {\r\n        curve: 'smooth',\r\n        width: 1.5\r\n    },\r\n    grid: {\r\n        strokeDashArray: 4\r\n    },\r\n    xaxis: {\r\n        type: 'datetime',\r\n        categories: [\r\n            '2018-05-19T00:00:00.000Z',\r\n            '2018-06-19T00:00:00.000Z',\r\n            '2018-07-19T01:30:00.000Z',\r\n            '2018-08-19T02:30:00.000Z',\r\n            '2018-09-19T03:30:00.000Z',\r\n            '2018-10-19T04:30:00.000Z',\r\n            '2018-11-19T05:30:00.000Z',\r\n            '2018-12-19T06:30:00.000Z'\r\n        ],\r\n        labels: {\r\n            format: 'MMM'\r\n        },\r\n        axisBorder: {\r\n            show: false\r\n        },\r\n        axisTicks: {\r\n            show: false\r\n        }\r\n    },\r\n    yaxis: {\r\n        show: false\r\n    },\r\n    tooltip: {\r\n        x: {\r\n            format: 'MM'\r\n        }\r\n    }\r\n};\r\n\r\n// ==============================|| REPORT AREA CHART ||============================== //\r\n\r\nconst ReportAreaChart = () => {\r\n    const theme = useTheme();\r\n\r\n    const { primary, secondary } = theme.palette.text;\r\n    const line = theme.palette.divider;\r\n\r\n    const [options, setOptions] = useState(areaChartOptions);\r\n\r\n    useEffect(() => {\r\n        setOptions((prevState) => ({\r\n            ...prevState,\r\n            colors: [theme.palette.warning.main],\r\n            xaxis: {\r\n                labels: {\r\n                    style: {\r\n                        colors: [secondary, secondary, secondary, secondary, secondary, secondary, secondary, secondary]\r\n                    }\r\n                }\r\n            },\r\n            grid: {\r\n                borderColor: line\r\n            },\r\n            tooltip: {\r\n                theme: 'light'\r\n            },\r\n            legend: {\r\n                labels: {\r\n                    colors: 'grey.500'\r\n                }\r\n            }\r\n        }));\r\n    }, [primary, secondary, line, theme]);\r\n\r\n    const [series] = useState([\r\n        {\r\n            name: 'Series 1',\r\n            data: [58, 115, 28, 83, 63, 75, 35, 55]\r\n        }\r\n    ]);\r\n\r\n    return <ReactApexChart options={options} series={series} type=\"line\" height={345} />;\r\n};\r\n\r\nexport default ReportAreaChart;\r\n","import { useEffect, useState } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\n// third-party\r\nimport ReactApexChart from 'react-apexcharts';\r\n\r\n// chart options\r\nconst columnChartOptions = {\r\n    chart: {\r\n        type: 'bar',\r\n        height: 430,\r\n        toolbar: {\r\n            show: false\r\n        }\r\n    },\r\n    plotOptions: {\r\n        bar: {\r\n            columnWidth: '30%',\r\n            borderRadius: 4\r\n        }\r\n    },\r\n    dataLabels: {\r\n        enabled: false\r\n    },\r\n    stroke: {\r\n        show: true,\r\n        width: 8,\r\n        colors: ['transparent']\r\n    },\r\n    xaxis: {\r\n        categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun']\r\n    },\r\n    yaxis: {\r\n        title: {\r\n            text: '$ (thousands)'\r\n        }\r\n    },\r\n    fill: {\r\n        opacity: 1\r\n    },\r\n    tooltip: {\r\n        y: {\r\n            formatter(val) {\r\n                return `$ ${val} thousands`;\r\n            }\r\n        }\r\n    },\r\n    legend: {\r\n        show: true,\r\n        fontFamily: `'Public Sans', sans-serif`,\r\n        offsetX: 10,\r\n        offsetY: 10,\r\n        labels: {\r\n            useSeriesColors: false\r\n        },\r\n        markers: {\r\n            width: 16,\r\n            height: 16,\r\n            radius: '50%',\r\n            offsexX: 2,\r\n            offsexY: 2\r\n        },\r\n        itemMargin: {\r\n            horizontal: 15,\r\n            vertical: 50\r\n        }\r\n    },\r\n    responsive: [\r\n        {\r\n            breakpoint: 600,\r\n            options: {\r\n                yaxis: {\r\n                    show: false\r\n                }\r\n            }\r\n        }\r\n    ]\r\n};\r\n\r\n// ==============================|| SALES COLUMN CHART ||============================== //\r\n\r\nconst SalesColumnChart = () => {\r\n    const theme = useTheme();\r\n\r\n    const { primary, secondary } = theme.palette.text;\r\n    const line = theme.palette.divider;\r\n\r\n    const warning = theme.palette.warning.main;\r\n    const primaryMain = theme.palette.primary.main;\r\n    const successDark = theme.palette.success.dark;\r\n\r\n    const [series] = useState([\r\n        {\r\n            name: 'Net Profit',\r\n            data: [180, 90, 135, 114, 120, 145]\r\n        },\r\n        {\r\n            name: 'Revenue',\r\n            data: [120, 45, 78, 150, 168, 99]\r\n        }\r\n    ]);\r\n\r\n    const [options, setOptions] = useState(columnChartOptions);\r\n\r\n    useEffect(() => {\r\n        setOptions((prevState) => ({\r\n            ...prevState,\r\n            colors: [warning, primaryMain],\r\n            xaxis: {\r\n                labels: {\r\n                    style: {\r\n                        colors: [secondary, secondary, secondary, secondary, secondary, secondary]\r\n                    }\r\n                }\r\n            },\r\n            yaxis: {\r\n                labels: {\r\n                    style: {\r\n                        colors: [secondary]\r\n                    }\r\n                }\r\n            },\r\n            grid: {\r\n                borderColor: line\r\n            },\r\n            tooltip: {\r\n                theme: 'light'\r\n            },\r\n            legend: {\r\n                position: 'top',\r\n                horizontalAlign: 'right',\r\n                labels: {\r\n                    colors: 'grey.500'\r\n                }\r\n            }\r\n        }));\r\n    }, [primary, secondary, line, warning, primaryMain, successDark]);\r\n\r\n    return (\r\n        <div id=\"chart\">\r\n            <ReactApexChart options={options} series={series} type=\"bar\" height={430} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SalesColumnChart;\r\n","/** @format */\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\n// material-ui\r\nimport { Box, Chip, Grid, Stack, Typography } from \"@mui/material\";\r\n\r\n// project import\r\nimport MainCard from \"../../../components/MainCard\";\r\n\r\n// assets\r\nimport { RiseOutlined, FallOutlined } from \"@ant-design/icons\";\r\n\r\n// ==============================|| STATISTICS - ECOMMERCE CARD  ||============================== //\r\n\r\nconst AnalyticEcommerce = ({\r\n  color,\r\n  title,\r\n  count,\r\n  percentage,\r\n  isLoss,\r\n  extra,\r\n}) => (\r\n  <MainCard contentSX={{ p: 2.25 }}>\r\n    <Stack spacing={0.5}>\r\n      <Typography variant=\"h6\" style={{ color: \"#333652\" }}>\r\n        {title}\r\n      </Typography>\r\n      <Grid container alignItems=\"center\">\r\n        <Grid item>\r\n          <Typography variant=\"h4\" style={{ color: \"#333652\" }}>\r\n            {count}\r\n          </Typography>\r\n        </Grid>\r\n        {percentage && (\r\n          <Grid item>\r\n            <Chip\r\n              variant=\"combined\"\r\n              style={{ color: \"#333652\" }}\r\n              icon={\r\n                <>\r\n                  {!isLoss && (\r\n                    <RiseOutlined\r\n                      style={{ fontSize: \"0.75rem\", color: \"#333652\" }}\r\n                    />\r\n                  )}\r\n                  {isLoss && (\r\n                    <FallOutlined\r\n                      style={{ fontSize: \"0.75rem\", color: \"red\" }}\r\n                    />\r\n                  )}\r\n                </>\r\n              }\r\n              label={`${percentage}%`}\r\n              sx={{ ml: 1.25, pl: 1, backgroundColor: \"#FAD02C\" }}\r\n              size=\"small\"\r\n            />\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n    </Stack>\r\n    <Box sx={{ pt: 2.25 }}>\r\n      <Typography variant=\"caption\" color=\"textSecondary\">\r\n        You made an extra{\" \"}\r\n        <Typography\r\n          component=\"span\"\r\n          variant=\"caption\"\r\n          sx={{ color: \"#333652\" }}>\r\n          {extra}\r\n        </Typography>{\" \"}\r\n        this year\r\n      </Typography>\r\n    </Box>\r\n  </MainCard>\r\n);\r\n\r\nAnalyticEcommerce.propTypes = {\r\n  color: PropTypes.string,\r\n  title: PropTypes.string,\r\n  count: PropTypes.string,\r\n  percentage: PropTypes.number,\r\n  isLoss: PropTypes.bool,\r\n  extra: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\r\n};\r\n\r\nAnalyticEcommerce.defaultProps = {\r\n  color: \"#333652\",\r\n};\r\n\r\nexport default AnalyticEcommerce;\r\n","export default __webpack_public_path__ + \"static/media/ceo.5ae14718.jpg\";","export default __webpack_public_path__ + \"static/media/kalsom.cc29510c.jpg\";","export default __webpack_public_path__ + \"static/media/sanee.b31857be.jpg\";","/** @format */\r\n\r\nimport { useState } from \"react\";\r\n\r\n// material-ui\r\nimport {\r\n  Avatar,\r\n  AvatarGroup,\r\n  Box,\r\n  Button,\r\n  Grid,\r\n  List,\r\n  ListItemAvatar,\r\n  ListItemButton,\r\n  ListItemSecondaryAction,\r\n  ListItemText,\r\n  MenuItem,\r\n  Stack,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\n\r\n// project import\r\nimport OrdersTable from \"./OrdersTable\";\r\nimport IncomeAreaChart from \"./IncomeAreaChart\";\r\nimport MonthlyBarChart from \"./MonthlyBarChart\";\r\nimport ReportAreaChart from \"./ReportAreaChart\";\r\nimport SalesColumnChart from \"./SalesColumnChart\";\r\nimport MainCard from \"../../components/MainCard\";\r\nimport AnalyticEcommerce from \"../../components/cards/statistics/AnalyticEcommerce\";\r\n\r\n// assets\r\nimport { TransactionOutlined } from \"@ant-design/icons\";\r\nimport avatar1 from \"../../assets/images/users/ceo.jpg\";\r\nimport avatar2 from \"../../assets/images/users/kalsom.jpg\";\r\nimport avatar3 from \"../../assets/images/users/sanee.jpg\";\r\n\r\n// avatar style\r\nconst avatarSX = {\r\n  width: 36,\r\n  height: 36,\r\n  fontSize: \"1rem\",\r\n};\r\n\r\n// action style\r\nconst actionSX = {\r\n  mt: 0.75,\r\n  ml: 1,\r\n  top: \"auto\",\r\n  right: \"auto\",\r\n  alignSelf: \"flex-start\",\r\n  transform: \"none\",\r\n};\r\n\r\n// sales report status\r\nconst status = [\r\n  {\r\n    value: \"today\",\r\n    label: \"Today\",\r\n  },\r\n  {\r\n    value: \"month\",\r\n    label: \"This Month\",\r\n  },\r\n  {\r\n    value: \"year\",\r\n    label: \"This Year\",\r\n  },\r\n];\r\n\r\n// ==============================|| DASHBOARD - DEFAULT ||============================== //\r\n\r\nconst DashboardDefault = () => {\r\n  const [value, setValue] = useState(\"today\");\r\n  const [slot, setSlot] = useState(\"week\");\r\n\r\n  return (\r\n    <Grid container rowSpacing={4.5} columnSpacing={2.75}>\r\n      {/* row 1 */}\r\n      <Grid item xs={12} sx={{ mb: -2.25 }}>\r\n        <Typography style={{ color: \"#333652\" }} variant=\"h5\">\r\n          Dashboard\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={12} sm={6} md={4} lg={3}>\r\n        <AnalyticEcommerce title=\"Total Students\" count=\"4,42,236\" />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6} md={4} lg={3}>\r\n        <AnalyticEcommerce\r\n          title=\"Total Earnings\"\r\n          count=\"78,250\"\r\n          percentage={70.5}\r\n          extra=\"8,900\"\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} sm={6} md={4} lg={3}>\r\n        <AnalyticEcommerce title=\"Total videos uploads\" count=\"18,800\" isLoss />\r\n      </Grid>\r\n      {/* <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                <AnalyticEcommerce title=\"Total Mentees\" count=\"$35,078\" percentage={27.4} isLoss color=\"warning\" extra=\"$20,395\" />\r\n            </Grid> */}\r\n\r\n      <Grid\r\n        item\r\n        md={8}\r\n        sx={{ display: { sm: \"none\", md: \"block\", lg: \"none\" } }}\r\n      />\r\n\r\n      {/* row 2 */}\r\n      <Grid item xs={12} md={7} lg={8}>\r\n        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n          <Grid item>\r\n            <Typography variant=\"h5\">Students Engagment</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Stack direction=\"row\" alignItems=\"center\" spacing={0}>\r\n              <Button\r\n                size=\"small\"\r\n                onClick={() => setSlot(\"month\")}\r\n                style={{ color: \"#333652\" }}\r\n                variant={slot === \"month\" ? \"outlined\" : \"text\"}>\r\n                Month\r\n              </Button>\r\n              <Button\r\n                size=\"small\"\r\n                onClick={() => setSlot(\"week\")}\r\n                style={{ color: \"#333652\" }}\r\n                variant={slot === \"week\" ? \"outlined\" : \"text\"}>\r\n                Week\r\n              </Button>\r\n            </Stack>\r\n          </Grid>\r\n        </Grid>\r\n        <MainCard content={false} sx={{ mt: 1.5 }}>\r\n          <Box sx={{ pt: 1, pr: 2 }}>\r\n            <IncomeAreaChart slot={slot} />\r\n          </Box>\r\n        </MainCard>\r\n      </Grid>\r\n      <Grid item xs={12} md={5} lg={4}>\r\n        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n          <Grid item>\r\n            <Typography variant=\"h5\">Income Overview</Typography>\r\n          </Grid>\r\n          <Grid item />\r\n        </Grid>\r\n        <MainCard sx={{ mt: 2 }} content={false}>\r\n          <Box sx={{ p: 3, pb: 0 }}>\r\n            <Stack spacing={2}>\r\n              <Typography variant=\"h6\" style={{ color: \"#333652\" }}>\r\n                This Week Statistics\r\n              </Typography>\r\n              <Typography variant=\"h3\" style={{ color: \"#333652\" }}>\r\n                N70,650\r\n              </Typography>\r\n            </Stack>\r\n          </Box>\r\n          <MonthlyBarChart />\r\n        </MainCard>\r\n      </Grid>\r\n\r\n      {/* row 3 */}\r\n      <Grid item xs={12} md={7} lg={8}>\r\n        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n          <Grid item>\r\n            <Typography variant=\"h5\">Recent Enrollments</Typography>\r\n          </Grid>\r\n          <Grid item />\r\n        </Grid>\r\n        <MainCard sx={{ mt: 2 }} content={false}>\r\n          <OrdersTable />\r\n        </MainCard>\r\n      </Grid>\r\n      <Grid item xs={12} md={5} lg={4}>\r\n        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n          <Grid item>\r\n            <Typography variant=\"h5\">Yearly Report</Typography>\r\n          </Grid>\r\n          <Grid item />\r\n        </Grid>\r\n        <MainCard sx={{ mt: 2 }} content={false}>\r\n          <List sx={{ p: 0, \"& .MuiListItemButton-root\": { py: 2 } }}>\r\n            <ListItemButton divider>\r\n              <ListItemText primary=\"Students Growth\" />\r\n              <Typography variant=\"h5\">+45.14%</Typography>\r\n            </ListItemButton>\r\n            <ListItemButton divider>\r\n              <ListItemText primary=\"Income Growth\" />\r\n              <Typography variant=\"h5\">30.58%</Typography>\r\n            </ListItemButton>\r\n          </List>\r\n          <ReportAreaChart />\r\n        </MainCard>\r\n      </Grid>\r\n\r\n      {/* row 4 */}\r\n      <Grid item xs={12} md={7} lg={8}>\r\n        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n          <Grid item>\r\n            <Typography variant=\"h5\">Earnings Report</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              id=\"standard-select-currency\"\r\n              size=\"small\"\r\n              select\r\n              value={value}\r\n              onChange={(e) => setValue(e.target.value)}\r\n              sx={{\r\n                \"& .MuiInputBase-input\": { py: 0.5, fontSize: \"0.875rem\" },\r\n              }}>\r\n              {status.map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n          </Grid>\r\n        </Grid>\r\n        <MainCard sx={{ mt: 1.75 }}>\r\n          <Stack spacing={1.5} sx={{ mb: -12 }}>\r\n            <Typography variant=\"h6\" color=\"secondary\">\r\n              Net Profit\r\n            </Typography>\r\n            <Typography variant=\"h4\">N1560</Typography>\r\n          </Stack>\r\n          <SalesColumnChart />\r\n        </MainCard>\r\n      </Grid>\r\n      <Grid item xs={12} md={5} lg={4}>\r\n        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\r\n          <Grid item>\r\n            <Typography variant=\"h5\">Transaction History</Typography>\r\n          </Grid>\r\n          <Grid item />\r\n        </Grid>\r\n        <MainCard sx={{ mt: 2 }} content={false}>\r\n          <List\r\n            component=\"nav\"\r\n            sx={{\r\n              px: 0,\r\n              py: 0,\r\n              \"& .MuiListItemButton-root\": {\r\n                py: 1.5,\r\n                \"& .MuiAvatar-root\": avatarSX,\r\n                \"& .MuiListItemSecondaryAction-root\": {\r\n                  ...actionSX,\r\n                  position: \"relative\",\r\n                },\r\n              },\r\n            }}>\r\n            <ListItemButton divider>\r\n              <ListItemAvatar>\r\n                <Avatar\r\n                  sx={{\r\n                    color: \"success.main\",\r\n                    bgcolor: \"success.lighter\",\r\n                  }}>\r\n                  <TransactionOutlined />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText\r\n                primary={\r\n                  <Typography variant=\"subtitle1\">\r\n                    New alert recieved #002434\r\n                  </Typography>\r\n                }\r\n                secondary=\"Today, 2:00 AM\"\r\n              />\r\n              <ListItemSecondaryAction>\r\n                <Stack alignItems=\"flex-end\">\r\n                  <Typography variant=\"subtitle1\" noWrap>\r\n                    + N4,430\r\n                  </Typography>\r\n                  <Typography variant=\"h6\" color=\"secondary\" noWrap>\r\n                    78%\r\n                  </Typography>\r\n                </Stack>\r\n              </ListItemSecondaryAction>\r\n            </ListItemButton>\r\n            <ListItemButton divider>\r\n              <ListItemAvatar>\r\n                <Avatar\r\n                  sx={{\r\n                    color: \"success.main\",\r\n                    bgcolor: \"success.lighter\",\r\n                  }}>\r\n                  <TransactionOutlined />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText\r\n                primary={\r\n                  <Typography variant=\"subtitle1\">\r\n                    Referral bonus recieved #984947\r\n                  </Typography>\r\n                }\r\n                secondary=\"5 August, 1:45 PM\"\r\n              />\r\n              <ListItemSecondaryAction>\r\n                <Stack alignItems=\"flex-end\">\r\n                  <Typography variant=\"subtitle1\" noWrap>\r\n                    + N3000\r\n                  </Typography>\r\n                  <Typography variant=\"h6\" color=\"secondary\" noWrap>\r\n                    8%\r\n                  </Typography>\r\n                </Stack>\r\n              </ListItemSecondaryAction>\r\n            </ListItemButton>\r\n            <ListItemButton>\r\n              <ListItemAvatar>\r\n                <Avatar\r\n                  sx={{\r\n                    color: \"success.main\",\r\n                    bgcolor: \"success.lighter\",\r\n                  }}>\r\n                  <TransactionOutlined />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText\r\n                primary={\r\n                  <Typography variant=\"subtitle1\">\r\n                    New alert recieved #988784\r\n                  </Typography>\r\n                }\r\n                secondary=\"7 hours ago\"\r\n              />\r\n              <ListItemSecondaryAction>\r\n                <Stack alignItems=\"flex-end\">\r\n                  <Typography variant=\"subtitle1\" noWrap>\r\n                    + N20,000\r\n                  </Typography>\r\n                  <Typography variant=\"h6\" color=\"secondary\" noWrap>\r\n                    16%\r\n                  </Typography>\r\n                </Stack>\r\n              </ListItemSecondaryAction>\r\n            </ListItemButton>\r\n          </List>\r\n        </MainCard>\r\n        <MainCard sx={{ mt: 2 }}>\r\n          <Stack spacing={3}>\r\n            <Grid container justifyContent=\"space-between\" alignItems=\"center\">\r\n              <Grid item>\r\n                <Stack>\r\n                  <Typography variant=\"h5\" noWrap>\r\n                    Help & Support Team\r\n                  </Typography>\r\n                  <Typography variant=\"caption\" color=\"secondary\" noWrap>\r\n                    Let us help you!\r\n                  </Typography>\r\n                </Stack>\r\n              </Grid>\r\n              <Grid item>\r\n                <AvatarGroup\r\n                  sx={{ \"& .MuiAvatar-root\": { width: 32, height: 32 } }}>\r\n                  <Avatar alt=\"Remy Sharp\" src={avatar1} />\r\n                  <Avatar alt=\"Travis Howard\" src={avatar2} />\r\n                  <Avatar alt=\"Cindy Baker\" src={avatar3} />\r\n                </AvatarGroup>\r\n              </Grid>\r\n            </Grid>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              sx={{ textTransform: \"capitalize\" }}>\r\n              Need Help?\r\n            </Button>\r\n          </Stack>\r\n        </MainCard>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default DashboardDefault;\r\n"],"sourceRoot":""}